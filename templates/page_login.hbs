<style>
    body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        background-color: #f5f5f5;
    }
    .login-container {
        width: 420px;
        max-width: 90vw;
        background-color: #fff;
        margin: 100px auto;
        padding: 10px 60px 20px;
        border-radius: 4px;
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
    }
    .login-container div {
        line-height: 48px;
        margin-bottom: 16px;
    }
    .login-container label {
        float: left;
        width: 80px;
    }
    .login-container input {
        width: 300px;
        height: 24px;
        line-height: 24px;
        padding: 4px 8px;
        border: 1px solid #d2d2d2;
        outline: none;
    }
    .login-container button {
        width: 100px;
        height: 40px;
        text-align: center;
        background-color: #1677ff;
        cursor: pointer;
        border: 0;
        color: #fff;
    }
    .login-container button:hover {
        background-color: #4096ff;
    }
    .login-container .error {
        color: #c00;
    }
</style>
<div class="login-container">
    <h3>登录</h3>
    <form action="" method="post">
        <input type="hidden" name="crsf_token" value="{{crsf_token}}">
        <div>
            <label>用户名: </label>
            <input type="text" name="username" value="" autocomplete="off" placeholder="用户名" />
        </div>
        <div>
            <label>密码: </label>
            <input type="password" name="password" value="" autocomplete="off" placeholder="密码" />
        </div>
        <div>
            <label>&nbsp;</label>
            <button type="submit">登录</button>
            <span class="error"></span>
        </div>
    </form>
</div>
<script>
(function () {
    var _0x5537 = ['c3BsaXQ=', 'bWFw', 'bGVuZ3Ro', 'aGFz', 'Zmxvb3I=', 'cmFuZG9t', 'dG9TdHJpbmc=', 'c3Vic3RyaW5n']; (function (_0x7f77f0, _0x22c48b) { var _0x5a8baf = function (_0x41bf08) { while (--_0x41bf08) { _0x7f77f0['push'](_0x7f77f0['shift']()); } }; _0x5a8baf(++_0x22c48b); }(_0x5537, 0xbf)); var _0x39f2 = function (_0x24432e, _0x3f2642) { _0x24432e = _0x24432e - 0x0; var _0x175ec8 = _0x5537[_0x24432e]; if (_0x39f2['wLgwpd'] === undefined) { (function () { var _0x4319c7 = function () { var _0x56a64c; try { _0x56a64c = Function('return\x20(function()\x20' + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');')(); } catch (_0x540c91) { _0x56a64c = window; } return _0x56a64c; }; var _0x39df57 = _0x4319c7(); var _0x71c38c = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='; _0x39df57['atob'] || (_0x39df57['atob'] = function (_0x41f8c0) { var _0x4bdff9 = String(_0x41f8c0)['replace'](/=+$/, ''); for (var _0xe778dd = 0x0, _0x3d3b1c, _0x34e95e, _0x2bbe6 = 0x0, _0x3a95f2 = ''; _0x34e95e = _0x4bdff9['charAt'](_0x2bbe6++); ~_0x34e95e && (_0x3d3b1c = _0xe778dd % 0x4 ? _0x3d3b1c * 0x40 + _0x34e95e : _0x34e95e, _0xe778dd++ % 0x4) ? _0x3a95f2 += String['fromCharCode'](0xff & _0x3d3b1c >> (-0x2 * _0xe778dd & 0x6)) : 0x0) { _0x34e95e = _0x71c38c['indexOf'](_0x34e95e); } return _0x3a95f2; }); }()); _0x39f2['ldEUox'] = function (_0x4ffbb5) { var _0xdd9a03 = atob(_0x4ffbb5); var _0x17f85b = []; for (var _0x197b9c = 0x0, _0x1f0490 = _0xdd9a03['length']; _0x197b9c < _0x1f0490; _0x197b9c++) { _0x17f85b += '%' + ('00' + _0xdd9a03['charCodeAt'](_0x197b9c)['toString'](0x10))['slice'](-0x2); } return decodeURIComponent(_0x17f85b); }; _0x39f2['jLKWhY'] = {}; _0x39f2['wLgwpd'] = !![]; } var _0x5a6400 = _0x39f2['jLKWhY'][_0x24432e]; if (_0x5a6400 === undefined) { _0x175ec8 = _0x39f2['ldEUox'](_0x175ec8); _0x39f2['jLKWhY'][_0x24432e] = _0x175ec8; } else { _0x175ec8 = _0x5a6400; } return _0x175ec8; }; var incrypt_account = function (_0x3eb7ab, _0x23fcd6) { var _0x2ba3cb = new Set(_0x3eb7ab[_0x39f2('0x0')](0x4, 0xc)[_0x39f2('0x1')]('')[_0x39f2('0x2')](function (_0x3ed537) { return parseInt(_0x3ed537, 0x10); })); var _0x18770b = ''; for (var _0x4e4e09 = 0x0; _0x4e4e09 < _0x23fcd6[_0x39f2('0x3')]; _0x4e4e09++) { var _0xe2a639 = _0x23fcd6[_0x4e4e09]; while (_0x2ba3cb[_0x39f2('0x4')](_0x18770b[_0x39f2('0x3')])) { _0x18770b += Math[_0x39f2('0x5')](Math[_0x39f2('0x6')]() * 0x24)[_0x39f2('0x7')](0x24); } _0x18770b += _0xe2a639; } return _0x18770b; };
    var form = document.querySelector('form');
    var token_input = form.querySelector('[name="crsf_token"]');
    var token = token_input.value
    var name_input = form.querySelector('[name="username"]');
    var pass_input = form.querySelector('[name="password"]');
    var error_show = document.querySelector('.error');
    form.addEventListener('submit', function (e) {
        e.preventDefault();
        var str = btoa(JSON.stringify({
            username: name_input.value,
            password: pass_input.value,
        }, null, 1));
        var account = incrypt_account(token, str)
        var xhr = new XMLHttpRequest()
        xhr.addEventListener('readystatechange', function (e) {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    const res = JSON.parse(xhr.responseText);
                    if (res.error) {
                        error_show.innerText = res.error;
                    } else {
                        if (res.msg) {
                            alert(res.msg)
                        }
                        location.href = "{{redirect}}";
                    }
                }
            }
        })
        xhr.open(form.method, form.action)
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.setRequestHeader('x-requested-with', 'XMLHttpRequest',);
        xhr.send('account=' + account )
    })
})();
</script>